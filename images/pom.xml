<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~  Copyright 2022 Red Hat, Inc., and individual contributors
  ~  as indicated by the @author tags.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.cloud-tests</groupId>
        <artifactId>wildfly-cloud-tests-parent</artifactId>
        <version>1.0.0.Alpha3-SNAPSHOT</version>
    </parent>
    <artifactId>wildfly-cloud-test-images</artifactId>
    <packaging>pom</packaging>

    <properties>
        <!-- Here to avoid provisioning server and building images for this parent module -->
        <wildfly.cloud.test.skip.image>true</wildfly.cloud.test.skip.image>
    </properties>

    <profiles>
        <profile>
            <id>perform-build</id>
            <!-- Enables the server provisioning and image building for child modules -->
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <missing>../.cloud-tests-root-marker</missing>
                </file>
            </activation>
            <properties>
                <wildfly.cloud.test.skip.image>false</wildfly.cloud.test.skip.image>
            </properties>
        </profile>
        <profile>
            <id>images</id>
            <modules>
                <module>cloud-server</module>
                <module>microprofile-reactive-messaging-amqp</module>
                <module>microprofile-reactive-messaging-kafka</module>
                <module>datasources/postgresql</module>
                <module>elytron-oidc-client</module>
                <module>web-clustering</module>
                <module>micrometer</module>
                <module>opentelemetry</module>
            </modules>

            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.wildfly.cloud-tests</groupId>
                        <artifactId>bom</artifactId>
                        <version>${project.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <configuration>
                            <!-- some tests check for the provisioned galleon layers -->
                            <record-provisioning-state>true</record-provisioning-state>
                            <feature-packs>
                                <feature-pack>
                                    <location>org.wildfly:wildfly-galleon-pack:${version.wildfly}</location>
                                </feature-pack>
                                <feature-pack>
                                    <location>org.wildfly.cloud:wildfly-cloud-galleon-pack:${version.wildfly.cloud.galleon.pack}</location>
                                </feature-pack>
                            </feature-packs>
                            <!-- layers are set by child modules, which also need to set <skip>false</skip> -->
                            <skip>${wildfly.cloud.test.skip.image}</skip>
                            <galleon-options>
                                <jboss-fork-embedded>${plugin.fork.embedded}</jboss-fork-embedded>
                            </galleon-options>
                        </configuration>
                        <executions>
                            <execution>
                                <id>provision-base-cloud-server</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-server</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <skip>${wildfly.cloud.test.skip.image}</skip>
                                    <images>
                                        <image>
                                            <name>wildfly-cloud-test-image/${project.name}:latest</name>
                                            <alias>server</alias>
                                            <build>
                                                <from>${image.name.wildfly.runtime}</from>
                                                <assembly>
                                                    <mode>dir</mode>
                                                    <user>jboss:root</user>
                                                    <targetDir>/opt/server</targetDir>
                                                    <inline>
                                                        <formats>
                                                            <format>dir</format>
                                                        </formats>
                                                        <fileSets>
                                                            <fileSet>
                                                                <directory>target/server</directory>
                                                                <outputDirectory>/</outputDirectory>
                                                                <includes>
                                                                    <include>**</include>
                                                                </includes>
                                                            </fileSet>
                                                        </fileSets>
                                                    </inline>
                                                </assembly>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
