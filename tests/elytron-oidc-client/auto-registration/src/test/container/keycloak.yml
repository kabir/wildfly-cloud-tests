apiVersion: v1
kind: List
items:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: test-wildfly-realm
    data:
     wildfly-realm.json: >-
      
    type: Opaque
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: keycloak-server-cloud-test
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: keycloak-server-cloud-test
      template:
        metadata:
          labels:
            app: keycloak-server-cloud-test
        spec:
          volumes:
            - name: keycloak-volume
              secret:
                secretName: test-wildfly-realm
                optional: false
          containers:
            - name: keycloak-server-cloud-test
              readinessProbe:
                 httpGet:
                   path: /realms/WildFly
                   port: 8080
                 failureThreshold: 30
                 periodSeconds: 10
              image: quay.io/keycloak/keycloak:20.0.0
              args: ["start-dev", "--import-realm"]
              imagePullPolicy: "IfNotPresent"
              env:
                - name: KEYCLOAK_ADMIN
                  value: "admin"
                - name: KEYCLOAK_ADMIN_PASSWORD
                  value: "change_me"
                - name: KEYCLOAK_IMPORT
                  value: "/tmp/import/wildfly-realm.json"
              ports:
                - name: k-port
                  containerPort: 8080
              volumeMounts:
                - name: keycloak-volume
                  mountPath: /opt/keycloak/data/import/
  - apiVersion: v1
    kind: Service
    metadata:
      name: keycloak-server-cloud-test-service
    spec:
      selector:
        app: keycloak-server-cloud-test
      type: NodePort
      ports:
        - name: http
          protocol: TCP
          port: 8080
          targetPort: k-port
          # Well known port used by test
          nodePort: 30075


